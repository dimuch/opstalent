angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('header','<div class="top-header"><div class="contact container-fluid"><div class="row"><div class="col-md-4 col-sm-5 col-xs-5"><div class="address"><a class="navbar-brand" ui-sref="main"><div><span class="open-bracket">[</span><span class="brand">Spotify Web Client</span><span class="close-bracket">]</span></div></a><div class="caption"></div></div></div><div class="col-md-8 col-md-7 col-md-7"><div class="email"><div class="icon"><svg height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"></path><path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z"></path></svg></div><div class="caption"><a ng-href="mailto:dmytro.kostylov@gmail.com">dmytro.kostylov@gmail.com,</a><span>&nbsp;Ukraine, Kyiv</span></div></div></div></div></div></div><nav class="navbar navbar-default navbar-fixed-top navbar-inverse"><div class="container-fluid" ng-class="{\'in\': open}"><input type="hidden" name="_csrf" ng-init="token._csrf = \'undefined\'" ng-model="token._csrf"/><div class="navbar-header"><button class="navbar-toggle" ng-click="open=!open" ng-init="open=false" type="button" data-toggle="collapse" data-target="#navbar" aria-expanded="true" aria-controls="navbar"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button></div><div class="collapse navbar-collapse" id="navbar" ng-class="{\'in\': open}"><ul class="nav navbar-nav navbar-right"><li ui-sref-active="active"><a ui-sref="task">Task</a></li><li ui-sref-active="active"><a ui-sref="search">Search</a></li><li ui-sref-active="active"><a ui-sref="connect">Connect</a></li><li ui-sref-active="active"><a ui-sref="register">Register</a></li><li ui-sref-active="active"><a ui-sref="login">Login</a></li><li class="dropdown" uib-dropdown="uib-dropdown"><a class="dropdown-toggle" uib-dropdown-toggle="uib-dropdown-toggle">Hi there, {{Auth.user.displayName}} &nbsp;<b class="caret"></b></a><ul class="dropdown-menu" uib-dropdown-menu="uib-dropdown-menu"><li><a ui-sref="accountSettings">Account settings</a></li><li class="divider" role="separator"></li><li><a tabindex="-1" ng-click="logout()">Logout</a></li></ul></li></ul></div></div></nav>');
$templateCache.put('connect','<div class="container-lg text-center"><h3>Here you can connect your active <a ng-href="https://www.spotify.com/">Spotify</a> <span>account to SpotTracker app</span></h3><br/><button class="btn btn-lg btn-info" ng-click="spotifyUserConnect()">Lets do it.</button></div>');
$templateCache.put('login','<div class="container-lg"><form class="col-md-4 col-md-offset-4 register" ng-submit="spotifyLogin()" name="register" novalidate="novalidate"><input type="hidden" name="_csrf"/><div class="form-group"><label>Login</label><input class="form-control" type="email" name="email" ng-model="user.email" placeholder="Spotify email" required="required" autofocus="autofocus"/></div><p class="help-block" ng-show="register.email.$dirty &amp;&amp; register.email.$invalid">Wrong email format</p><div class="form-group"><label>Password</label><input class="form-control" type="password" name="password" ng-model="user.password" placeholder="Spotify Password" required="required"/></div><button class="btn btn-lg btn-primary btn-block login" ng-disabled="register.$invalid" type="submit">Login</button></form></div>');
$templateCache.put('search','<div class="container-lg"><form class="search" ng-submit="setQuery()"><div class="form-group col-md-5 col-sm-4 col-xs-12"><label for="query">Hey, What you are looking for</label><input class="form-control" type="text" id="query" name="queryString" ng-model="userQuery.searchText" required="required" autofocus="autofocus"/></div><div class="form-group col-md-5 col-sm-6 col-xs-12"><label>Search Options (check to include)</label><div class="form-control"><div class="checkbox-inline" ng-repeat="(key, value) in userQuery.searchTypes"><input type="checkbox" name="{{key}}" ng-model="userQuery.searchTypes[key]"/><label>{{key}}</label></div></div></div><div class="form-group col-md-1 col-sm-2 col-xs-12"><button class="btn btn-primary sptr-search" type="submit">Search It</button></div></form></div><div class="container-lg"><div class="results" ui-view="ui-view"><uib-tabset active="activeTab.index" ng-hide="headers.length == 0;"><uib-tab heading="{{header}}" ng-repeat="header in headers track by $index"><ul class="items {{header}}" role="group" data-toggle="buttons"><li class="item" ng-repeat="item in result[header].items"><div class="item-img"><img ng-src="{{item.images[1].url}}"/></div><div class="item-name">{{item.name}}</div><div class="item-more-info"></div></li></ul></uib-tab></uib-tabset></div></div>');
$templateCache.put('task','<div class="container-lg"><h3>Task</h3><p>Your task is to create RESTful API in Node.js to get albums and songs provided by Spotify and display on front-end application(Angular2)</p><p>There has to be developed in two different instances:</p><ol><li>Backend - Node.js - RESTful API</li><li>Frontend - Angular2</li></ol><p>The database should be MongoDB and to communication between two instances should be oAuth2.</p><ol>Comments:<li>Here is a link to Spotify API - https://developer.spotify.com/web-api/user-guide/ (you have to use endpoints like ARTISTS, ALBUMS, SEARCH)</li><li>Node should have methods which requesting Spotify API about albums, artists and searching.</li><li>Angular2 should have some layer to get some informations from Node.js and display in nice way</li><li>The application should be able to searching albums and artist and display list of albums or artists songs ready to listen.</li><li>MongoDB should be used to save your favourites songs(like system - just a flag to DB) also list these songs</li></ol><p>P.S.: It has to be a little, tricky application which shows us how you will resolve a few things. It has to be only concept, but done in the best way. You are responsible for design and how it will work. Please remember about best practices, newest tools, tests, etc.</p></div>');}]);